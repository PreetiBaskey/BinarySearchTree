#include<bits/stdc++.h>
using namespace std;

class node {
    public:
        int data;
        node* left;
        node* right;
        
        node(int data) {
            this->data = data;
            this->left = NULL;
            this->right = NULL;
        }
};

node* createBST(node* root, int data) {
    if(root == NULL) {
        return new node(data);
    }
    if(data < root->data) {
        root->left = createBST(root->left, data);
    }
    else if(data > root->data) {
        root->right = createBST(root->right, data);
    }
    return root;
    
}

void enterData(node* &root) {
    int data;
    cout<<"Enter data [Enter -1 to end] :- ";
    cin>>data;
    while(data != -1) {
        root = createBST(root, data);
        cout<<"Enter data [Enter -1 to end] :- ";
        cin>>data;
    }
}

void inOrder(node* &root) {
    if(root == NULL) {
        return;
    }
    inOrder(root->left);
    cout<<root->data<<" ";
    inOrder(root->right);
}

bool searchBST(node* &root, int val) {
    if(root == NULL) {
        return false;
    }
    if(val == root->data) {
        return true;
    }
    if(val < root->data) {
        return searchBST(root->left, val);
    }
    else if(val > root->data) {
        return searchBST(root->right, val);
    }
    return false;
}

int main() {
    
    node* root = NULL;
    enterData(root);
    cout<<"InOrder traversal is :- ";
    inOrder(root);
    int val;
    cout<<endl<<"Enter value to search :- ";
    cin>>val;
    bool result = searchBST(root, val);
    cout<<endl<<"Search value for "<<val<<" is :- "<<result;
    
    return 0;
}